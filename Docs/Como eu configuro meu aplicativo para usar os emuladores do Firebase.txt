Como eu configuro meu aplicativo para usar os emuladores do Firebase?
O Gemini disse
Olá! Que excelente pergunta! Configurar seu aplicativo para usar os emuladores do Firebase é um passo fundamental para um desenvolvimento eficiente e sem custos. Como seu aplicativo é um aplicativo web em TypeScript/JavaScript, a abordagem é bem direta.
A ideia principal é que você precisa de duas coisas:
Iniciar os emuladores: Isso é feito através da Firebase CLI no seu ambiente de desenvolvimento.
Configurar seu código JavaScript/TypeScript para que ele saiba que, em vez de se conectar aos serviços de produção do Firebase (como o Firestore ou a autenticação na nuvem), ele deve se conectar às suas instâncias locais dos emuladores.
Vamos focar na segunda parte, que é a configuração do seu aplicativo:
O segredo está em usar o método useEmulator() fornecido pelos SDKs do Firebase. Você fará isso para cada serviço do Firebase que você deseja emular localmente.
Por exemplo, para o Cloud Firestore , você faria algo assim no seu código JavaScript/TypeScript:
import { getFirestore, connectFirestoreEmulator } from "firebase/firestore";
import { initializeApp } from "firebase/app";

// ... sua configuração Firebase inicial ...
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Use os emuladores SOMENTE em desenvolvimento!
if (process.env.NODE_ENV !== 'production') { // ou alguma outra flag de ambiente
  connectFirestoreEmulator(db, "localhost", 8080); // 8080 é a porta padrão do Firestore Emulator
}
Abrir
Você fará o mesmo para outros serviços:
Firebase Authentication:
import { getAuth, connectAuthEmulator } from "firebase/auth";
const auth = getAuth(app);
if (process.env.NODE_ENV !== 'production') {
  connectAuthEmulator(auth, "http://localhost:9099"); // 9099 é a porta padrão do Auth Emulator
}
Abrir
Firebase Realtime Database:
import { getDatabase, connectDatabaseEmulator } from "firebase/database";
const database = getDatabase(app);
if (process.env.NODE_ENV !== 'production') {
  connectDatabaseEmulator(database, "localhost", 9000); // 9000 é a porta padrão do RTDB Emulator
}
Abrir
Cloud Functions for Firebase: Se suas funções são chamadas pelo cliente (como funções chamáveis), elas serão automaticamente roteadas para o emulador se o seu cliente estiver configurado para usar os emuladores.
É crucial que você condicione essa conexão aos emuladores para que ela ocorra apenas em seu ambiente de desenvolvimento ou debug . Você não quer que seu aplicativo de produção tente se conectar a um emulador local! Uma variável de ambiente como process.env.NODE_ENV ou uma flag de build é uma ótima maneira de controlar isso.
Com essa configuração, seu aplicativo web pode interagir com os serviços do Firebase localmente, permitindo que você desenvolva, teste e depure sem custos e sem afetar seus dados de produção. Isso também é super útil para depurar suas Firebase Security Rules!
Para se aprofundar, você poderia perguntar:
Como posso iniciar e gerenciar os emuladores do Firebase usando a Firebase CLI?
Posso usar os emuladores para testar minhas Firebase Security Rules antes de implantá-las?
Existe uma maneira de usar os emuladores do Firebase em um ambiente de integração contínua (CI/CD)?